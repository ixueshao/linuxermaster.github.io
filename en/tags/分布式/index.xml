<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>分布式 on 云原生生态圈</title>
    <link>https://linuxermaster.github.io/en/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link>
    <description>Recent content in 分布式 on 云原生生态圈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>marionxue@qq.com (Marionxue)</managingEditor>
    <webMaster>marionxue@qq.com (Marionxue)</webMaster>
    <copyright>[云原生生态圈](https://www.devopsman.cn) &amp;copy;2016-{year}, All Rights Reserved [转载注明出处: devopsman.cn](https://www.devopsman.cn)</copyright>
    <lastBuildDate>Fri, 05 Jun 2020 12:00:06 +0900</lastBuildDate>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    
        <atom:link href="https://linuxermaster.github.io/en/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Consul在微服务中的角色</title>
        <link>https://linuxermaster.github.io/en/posts/20200605-consul%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%A7%92%E8%89%B2/</link>
        <pubDate>Fri, 05 Jun 2020 12:00:06 +0900</pubDate>
        <author>marionxue@qq.com (Marionxue)</author>
        <atom:modified>Fri, 05 Jun 2020 12:00:06 +0900</atom:modified>
        <guid>https://linuxermaster.github.io/en/posts/20200605-consul%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%A7%92%E8%89%B2/</guid>
        <description>在微服务体系的建设中，单体服务的拆分使微服务变得越来越多，服务之间的依赖关系也越来越复杂，需要解决配置集中管理、配置变更后的自动刷新或者重载甚至需要实现动态配置</description>
        <content:encoded>&lt;p&gt;在微服务体系的建设中，单体服务的拆分使微服务变得越来越多，服务之间的依赖关系也越来越复杂，需要解决配置集中管理、配置变更后的自动刷新或者重载甚至需要实现动态配置。动态配置是什么样的，我想接触过Traefik和Gitlab Runner的同学应该都会有感触，虽然实现的原理有些不一样，但是都达到一种无须认为过多干预即实现服务的重载生效。&lt;/p&gt;
&lt;p&gt;我们本文会通过&lt;code&gt;consul&lt;/code&gt;、&lt;code&gt;consul-template&lt;/code&gt;、&lt;code&gt;registrator&lt;/code&gt;和&lt;code&gt;Docker&lt;/code&gt;等模拟一个使用consul作为服务发现，动态渲染nginx的配置文件实现upstream服务健康状态检查后自动的注册与下线。&lt;/p&gt;
&lt;p&gt;首选介绍一下这个工具的作用：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;consul&lt;/code&gt;：是一款服务配置和发现工具，分布式的、高可用的以及极具扩展性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;consul-template&lt;/code&gt;:是一个从&lt;code&gt;consul&lt;/code&gt;中获取&lt;code&gt;k/v&lt;/code&gt;信息，然后将值&lt;code&gt;v&lt;/code&gt;填充到基于&lt;code&gt;go template&lt;/code&gt;语法的文件中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;registrator&lt;/code&gt;：是一个与&lt;code&gt;docker.sock&lt;/code&gt;通信，将&lt;code&gt;running&lt;/code&gt;着的&lt;code&gt;Docker container&lt;/code&gt;自动的注册到consul的一个服务注册工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200605222849414.png&#34; alt=&#34;image-20200605222849414&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下面通过一个实际的例子来探索&lt;code&gt;consul&lt;/code&gt;与&lt;code&gt;consul-template&lt;/code&gt;结合解决那些微服务模式下动态发现、自动刷新的问题。&lt;/p&gt;
&lt;p&gt;首先通过docker运行一个consul节点，用于记录registrator发现的容器信息:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d --name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;consul --restart&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;always &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;CONSUL_LOCAL_CONFIG={&amp;#34;skip_leave_on_interrupt&amp;#34;: true, &amp;#34;ui&amp;#34;: true,  &amp;#34;dns_config&amp;#34;: { &amp;#34;allow_stale&amp;#34;: false }}&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8300:8300 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8301:8301 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8301:8301/udp &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8302:8302/udp &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8302:8302 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8400:8400 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8500:8500 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -p 8600:8600 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             -h node1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;             consul agent -server -bind&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;192.168.99.129 -bootstrap-expect&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -node&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;node1 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;            -client 0.0.0.0 -ui
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content:encoded>
        <dc:creator>云原生生态圈</dc:creator>
        <media:content url="https://linuxermaster.github.ioimages/posts/harbor-syncdata.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>服务发现</category>
            
          
            
              <category>分布式</category>
            
          
            
              <category>consul</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>