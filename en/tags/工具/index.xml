<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>工具 on 云原生生态圈</title>
    <link>https://linuxermaster.github.io/en/tags/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on 云原生生态圈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>marionxue@qq.com (Marionxue)</managingEditor>
    <webMaster>marionxue@qq.com (Marionxue)</webMaster>
    <copyright>[云原生生态圈](https://www.devopsman.cn) &amp;copy;2016-{year}, All Rights Reserved [转载注明出处: devopsman.cn](https://www.devopsman.cn)</copyright>
    <lastBuildDate>Sun, 07 Jun 2020 12:00:06 +0900</lastBuildDate>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    
        <atom:link href="https://linuxermaster.github.io/en/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>P站风格Logo生成器</title>
        <link>https://linuxermaster.github.io/en/posts/20200607-p%E7%AB%99%E9%A3%8E%E6%A0%BClogo%E7%94%9F%E6%88%90%E5%99%A8/</link>
        <pubDate>Sun, 07 Jun 2020 12:00:06 +0900</pubDate>
        <author>marionxue@qq.com (Marionxue)</author>
        <atom:modified>Sun, 07 Jun 2020 12:00:06 +0900</atom:modified>
        <guid>https://linuxermaster.github.io/en/posts/20200607-p%E7%AB%99%E9%A3%8E%E6%A0%BClogo%E7%94%9F%E6%88%90%E5%99%A8/</guid>
        <description>​ 最近发现很多的微信文章上出现了一种logo设计，跟P站的logo设计风格一样让人印象深刻，黑底白字，配上一小撮橙色，给人极强的冲击力。后来查了一下在Githu</description>
        <content:encoded>&lt;p&gt;&lt;img src=&#34;images.assets/image-20200607164436481.png&#34; alt=&#34;image-20200607164436481&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​      最近发现很多的微信文章上出现了一种logo设计，跟P站的logo设计风格一样让人印象深刻，黑底白字，配上一小撮橙色，给人极强的冲击力。后来查了一下在Github上发现有一个有意思的程序员弄的一个在线创意Logo生成器，利用&lt;code&gt;Logoly Pro&lt;/code&gt;可以生成类似&lt;code&gt;YouTobe&lt;/code&gt;、&lt;code&gt;P站&lt;/code&gt;等Logo风格的标志。分享给大家，于是就有了今天这篇文章。&lt;/p&gt;
&lt;h3 id=&#34;logoly的由来&#34;&gt;logoly的由来&lt;/h3&gt;
&lt;p&gt;这个风格的制作是由&lt;code&gt;tencent&lt;/code&gt;的一位大牛开发制作的，叫做&lt;code&gt;白宦成&lt;/code&gt;,这里是他对于这个网页版工具的自述：&lt;/p&gt;
&lt;p&gt;我自己平时经常要做一些 Side Project ，在做 Side Project 的时候，就涉及到了要做 Logo ，但是作为一个没有设计感的程序员，在做 Logo 时总是会做出一些很丑的 Logo ，于是痛定思痛，想想有没有什么有用的工具可以帮助我生成好看的 Logo。对于我来说，也不需要太过复杂，能够满足我自己的要求就行。&lt;/p&gt;
&lt;p&gt;P站Logo风格图片素材制作的官方网站：&lt;a href=&#34;https://logoly.pro/&#34; title=&#34;logoly网站&#34;&gt;https://logoly.pro/&lt;/a&gt; 代码仓库里面是这样描述的，”一个简单的在线徽标生成器，适合想要轻松设计徽标的人们&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200607171024698.png&#34; alt=&#34;image-20200607171024698&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;logoly的功能和特色&#34;&gt;logoly的功能和特色&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;生成P站风格的logo&lt;/li&gt;
&lt;li&gt;支持导出&lt;code&gt;png&lt;/code&gt;格式的图片&lt;/li&gt;
&lt;li&gt;支持修改&lt;code&gt;前缀/后缀/背景&lt;/code&gt;的颜色&lt;/li&gt;
&lt;li&gt;支持设置字体的大小&lt;/li&gt;
&lt;li&gt;支持自定义字体&lt;code&gt;TODO&lt;/code&gt;，可能是为了防止侵权，避免使用一些未开源的字体&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;logoly的使用方法&#34;&gt;logoly的使用方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开logoly网站: &lt;a href=&#34;https://logoly.pro/s&#34;&gt;https://logoly.pro/s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在文本框内输入需要的文本&lt;/li&gt;
&lt;li&gt;修改你需要的颜色和字体的大小&lt;/li&gt;
&lt;li&gt;点击导出即可下载&lt;code&gt;png&lt;/code&gt;格式的图片&lt;/li&gt;
&lt;li&gt;还是不太懂得，可以看一下哔哩哔哩&lt;code&gt;B站&lt;/code&gt;上别人发的文章，或者就放弃使用吧！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200607164549053.png&#34; alt=&#34;image-20200607164549053&#34; /&gt;&lt;/p&gt;
</content:encoded>
        <dc:creator>云原生生态圈</dc:creator>
        <media:content url="https://linuxermaster.github.ioimages/posts/harbor-syncdata.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>logo</category>
            
          
            
              <category>logoly</category>
            
          
            
              <category>工具</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>技术人员最常用的命令行工具</title>
        <link>https://linuxermaster.github.io/en/posts/20200531-%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Sat, 30 May 2020 12:00:06 +0900</pubDate>
        <author>marionxue@qq.com (Marionxue)</author>
        <atom:modified>Sat, 30 May 2020 12:00:06 +0900</atom:modified>
        <guid>https://linuxermaster.github.io/en/posts/20200531-%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
        <description></description>
        <content:encoded>&lt;h4 id=&#34;autojump&#34;&gt;autojump&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/autojump.svg&#34; alt=&#34;Github stars&#34; /&gt;&lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/wting/autojump?label=watch&amp;logoColor=red&amp;style=social&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;autojump&lt;/code&gt; 是一款非常方便的命令行下的目录跳转工具，它能帮你快速从目录访问的历史记录中统计出各个目录的访问频次和权重，这样，就能方便的让你在各个目录中迅速跳转了。只要你记得之前某个访问过的目录的大概名字，配合 autojump，就能快速的跳转过去，再也不用打一长串的 &lt;code&gt;cd&lt;/code&gt; 命令了。使用方式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/autojump.gif&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;安装&#34;&gt;安装&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install autojump
&lt;span class=&#34;c1&#34;&gt;# 大多数mac系统都会安装zsh,因此当安装配置好autojump之后，需要将以下代码写入到~/.zshrc&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; -s &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;/etc/autojump.sh &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; . &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;brew --prefix&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;/etc/autojump.sh
&lt;span class=&#34;c1&#34;&gt;# 最后在source一遍&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;tig&#34;&gt;tig&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/jonas/tig?style=social&#34;&gt;&lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/jonas/tig?style=social&#34;&gt;&lt;/p&gt;
&lt;p&gt;Git 已经成为我们平时经常用到的版本控制管理工具。通常，我们用 &lt;code&gt;git log&lt;/code&gt; 命令来查看 git 提交的历史记录。如果你已经厌倦了 &lt;code&gt;git log&lt;/code&gt; 那种千篇一律的界面，那么 &lt;code&gt;tig&lt;/code&gt; 绝对是一个不可错过的命令行下查看 git 历史提交记录的工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/tig.gif&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tig&lt;/code&gt; 的界面看起来比起 &lt;code&gt;git log&lt;/code&gt; 要酷炫不少，而且使用起来也挺方便。此外，&lt;code&gt;tig&lt;/code&gt; 的默认按键绑定还跟 Vim 比较类似，真是 Vimer 的福音。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install tig
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;git-summary&#34;&gt;git summary&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/tj/git-extras?style=social&#34;&gt;&lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/tj/git-extras?style=social&#34;&gt;&lt;/p&gt;
&lt;p&gt;平时我们在多人合作开发一个项目的时候，想要大致了解一下每个人对这个项目提交的 commit 数量和大致的贡献度，那么 &lt;code&gt;git summary&lt;/code&gt; 这个命令绝对能满足你的要求&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/summary.gif&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git summary&lt;/code&gt; 通过对项目中每一个 commit 的统计，能大致计算出每个 contributor 的提交次数和贡献百分比。让你对这个项目的贡献度能一目了然。&lt;/p&gt;
&lt;p&gt;默认 git 是不会带有这个命令的，需要在 Mac OS 下额外安装一个扩展包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install git-extras
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;the_silver_searcher&#34;&gt;the_silver_searcher&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/ggreer/the_silver_searcher?style=social&#34;&gt;&lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/ggreer/the_silver_searcher?style=social&#34;&gt;&lt;/p&gt;
&lt;p&gt;UNIX/Linux 系统有不少好用的工具，用于文本搜索的 &lt;code&gt;grep&lt;/code&gt; 或许是其中最常用的工具之一。尽管平时称心如意，在面对数百万行的代码库时，&lt;code&gt;grep&lt;/code&gt; 的用户体验实在堪忧。还好，我们有 the silver searcher （即 &lt;code&gt;ag&lt;/code&gt;）这样迅捷的替代品&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200531233956746.png&#34; alt=&#34;image-20200531233956746&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在文本中搜索指定的字符串,显示包含字符串的行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ag &lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; ./tagret.file
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示含有指定字符串的文件名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ag -l &lt;span class=&#34;s1&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tmux&#34;&gt;tmux&lt;/h4&gt;
&lt;p&gt;&lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/tmux/tmux?style=social&#34;&gt;&lt;img alt=&#34;GitHub stars&#34; src=&#34;https://img.shields.io/github/stars/tmux/tmux?style=social&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们在远程执行命令的时候，经常性的会因为网络异常&lt;code&gt;打嗝&lt;/code&gt;造成回话断开，命令执行失败，此时你就需要一个 Tmux，它是一个终端复用器（terminal multiplexer)。这样即使你远程连接服务器的笔记本断网了，也不会终端你在服务器上执行的命令；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/tao-tmux-screenshot.png&#34; alt=&#34;_images/tao-tmux-screenshot.png&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用&lt;/li&gt;
&lt;li&gt;它可以让新窗口&amp;quot;接入&amp;quot;已经存在的会话&lt;/li&gt;
&lt;li&gt;它允许每个会话有多个连接窗口，因此可以多人实时共享会话。&lt;/li&gt;
&lt;li&gt;它还支持窗口任意的垂直和水平拆分。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;jq&#34;&gt;jq&lt;/h4&gt;
&lt;p&gt;json 文件处理以及格式化显示，支持高亮，可以替换 python -m json.tool&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200531235315498.png&#34; alt=&#34;image-20200531235315498&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;httpstat&#34;&gt;httpstat&lt;/h4&gt;
&lt;p&gt;HTTP 响应的可视化命令行工具,请求含有&lt;code&gt;http/https&lt;/code&gt;前缀的 url,支持所有&lt;code&gt;curl&lt;/code&gt;支持的除了&lt;code&gt;-w&lt;/code&gt;,&lt;code&gt;-D&lt;/code&gt;,&lt;code&gt;-o&lt;/code&gt;,&lt;code&gt;-S&lt;/code&gt;,&lt;code&gt;-s&lt;/code&gt;之外的所有选项。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/screenshot.png&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;thefuck&#34;&gt;thefuck&lt;/h4&gt;
&lt;p&gt;命令行打错了以后，打一个&lt;code&gt;fuck&lt;/code&gt;就会自动纠正。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/example.gif&#34; alt=&#34;gif with examples&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;shellcheckhttpsgithubcomkoalamanshellcheck&#34;&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck&#34;&gt;shellcheck&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;ShellCheck，用于 Shell 脚本的静态分析工具，在网页上检查你的脚本：https://www.shellcheck.net/ ,shellcheck 具体会检查一些什么问题呢，以下给出一个不完整的问题检查列表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引号问题&lt;/li&gt;
&lt;li&gt;条件判断 ShellCheck 可以识别大多数不正确的条件判断语句&lt;/li&gt;
&lt;li&gt;常见的对命令的错误使用&lt;/li&gt;
&lt;li&gt;ShellCheck 识别很多初学者的语法错误&lt;/li&gt;
&lt;li&gt;ShellCheck 可以提出一些风格改进建议&lt;/li&gt;
&lt;li&gt;ShellCheck 可以识别一些数据和拼写错误&lt;/li&gt;
&lt;li&gt;ShellCheck 可以做出一些增强脚本鲁棒性的建议&lt;/li&gt;
&lt;li&gt;ShellCheck 警告你使用了 shebang 不支持的特性.&lt;/li&gt;
&lt;li&gt;ShellCheck 可以识别到一些其他问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/image-20200601190404241.png&#34; alt=&#34;image-20200601190404241&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;glances&#34;&gt;glances&lt;/h3&gt;
&lt;p&gt;top/htop`的替代方案，官网地址:https://nicolargo.github.io/glances/&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images.assets/screenshot-wide.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;</content:encoded>
        <dc:creator>云原生生态圈</dc:creator>
        <media:content url="https://linuxermaster.github.ioimages/posts/harbor-syncdata.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Termianl</category>
            
          
            
              <category>工具</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>